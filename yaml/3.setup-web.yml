AWSTemplateFormatVersion: "2010-09-09"
Description: A template for setting up web servers

Parameters:
  # Default settings
  ProjectName:
    Type: String
  
  InstanceType:
    Type: String 
    Default: t2.micro
  
  ImageId:
    Type: String 
  
  KeyName:
    Type: String 
    Default: web

Resources:
##########################
# Set a target group 
##########################
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      IpAddressType: ipv4
      Name: !Sub ${ProjectName}-tg
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue VPC
      HealthCheckPath: /index.php
      TargetType: instance

##########################
# Set an ALB
##########################
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${ProjectName}-alb
      IpAddressType: ipv4
      Scheme: internet-facing 
      SecurityGroups: 
        - !ImportValue ALBSG
      Subnets:
        - !ImportValue PublicSubnet1
        - !ImportValue PublicSubnet2
      Type: application

      
# Mappings 

##########################
# Set a listener
##########################
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward 
          TargetGroupArn: !GetAtt TargetGroup.TargetGroupArn
      LoadBalancerArn: !GetAtt ALB.LoadBalancerArn
      Port: 80
      Protocol: HTTP

##########################
# Set up the IAM role
##########################
  WebServerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-web-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRDSDataFullAccess #TODO
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess

##########################
# Set up the auto scaling group 
##########################
  IamInstanceProfile:
    DependsOn:
      - WebServerRole
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${ProjectName}-profile
      Roles:
        - !Sub ${ProjectName}-web-role

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: !Sub ${ProjectName}-web-template
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId  
      SecurityGroups: 
        - !ImportValue WEBSG
      IamInstanceProfile: !GetAtt IamInstanceProfile.Arn
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Import FileSystemId and MountPointPath from setup-efs stack
          FileSystemId=$(aws cloudformation describe-stacks --stack-name setup-efs --query "Stacks[0].Outputs[?OutputKey=='FileSystemId'].OutputValue" --output text)
          MountPointPath=$(aws cloudformation describe-stacks --stack-name setup-efs --query "Stacks[0].Outputs[?OutputKey=='MountPointPath'].OutputValue" --output text)

          # EFS mount 
          mkdir -p "${MountPointPath}"
          mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport "${FileSystemId}.efs.us-west-2.amazonaws.com:/" "${MountPointPath}"

          # Install libs
          sudo yum -y update 
          sudo yum install -y httpd

          # Start web server
          sudo systemctl start httpd
          sudo systemctl enable httpd




  AutoScalingGroup:
    DependsOn:
      - LaunchConfiguration
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${ProjectName}-autoscaling
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1 
      LaunchConfigurationName: !Sub ${ProjectName}-web-template
      TargetGroupARNs:
        - !Ref TargetGroup
      VPCZoneIdentifier:
        - !ImportValue WebSubnet1
        - !ImportValue WebSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-web
          PropagateAtLaunch: true












